@page "{id:int}"

@using Octokit
@model TrackingIssueModel
@{
    ViewData["Title"] = "Issue Tracking";
}

<h3>Tracking Issue</h3>
<form method="post">
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Title</label>
        <input class="col-sm-10 form-control" asp-for=@Model.IssueTitle />
    </div>

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Definition</label>
        <input class="col-sm-10 form-control" value="@Model.Definition" readonly />
    </div>

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Query</label>
        <input class="col-sm-10 form-control" value="@Model.SearchQuery" readonly />
    </div>

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Kind</label>
        <input class="col-sm-10 form-control" value="@Model.TrackingKind" readonly />
    </div>

    @if (!string.IsNullOrEmpty(@Model.GitHubIssueUri))
    {
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">GitHub Issue</label>
            <a href="@Model.GitHubIssueUri">@Model.GitHubIssueUri</a>
        </div>
    }

    <div class="d-flex flex-row-reverse">
        @{
            var value = Model.IsActive ? "" : "disabled";
        }
        <button type="submit" class="btn btn-primary ml-2 @value" name="formAction" value="close">Close</button>
        <button type="submit" class="btn btn-primary ml-2" name="formAction" value="update">Update</button>
    </div>
</form>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
      @Model.ErrorMessage
    </div>
}

<h3>Result Summary</h3>
<p>Number of occurrences</p>
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th scope="col">Today</th>
            <th scope="col">Week</th>
            <th scope="col">Month</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@Model.HitCount.Today</td>
            <td>@Model.HitCount.Week</td>
            <td>@Model.HitCount.Month</td>
        </tr>
    </tbody>
</table>

<h3>Results</h3>
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th scope="col">Build</th>
            <th scope="col">Kind</th>
            <th scope="col">Job Name</th>
            <th scope="col">Attempt</th>
            <th scope="col">Repository</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var issueData in @Model.Results)
        {
            <tr>
                <td><a href=@issueData.BuildUri>@issueData.BuildNumber</a>
                <td>@issueData.BuildKind</td>
                <td>@issueData.JobName</td>
                <td>@issueData.Attempt</td>
                <td><a href=@issueData.RepositoryUri>@issueData.RepositoryName</a>
            </tr>
        }
    </tbody>
</table>

<partial name="../Shared/_PaginationDisplay" model="@Model.PaginationDisplay" />

@if (Model.IsActive)
{
    <h3>Populate Results</h3>
    <p>Triage this issue against builds in the following query</p>
    <form method="post">
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Build Query</label>
            <input class="col-sm-10 form-control" asp-for=@Model.PopulateBuildsQuery />
        </div>
        <input type="hidden" name="id" value="@Model.ModelTrackingIssueId" />
        <input type="hidden" name="formAction" value="populate" />
        <button type="submit" class="btn btn-primary">Populate</button>
    </form>
}
